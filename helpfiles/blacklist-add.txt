
blacklist-add REGEXP...

This operation expects a list of Python regular expressions, and they will be
added to the list of blacklisted regular expressions.

Tips on blacklist usage:

Most Slackware package or upgrade managers have a blacklisting mechanism, but
their intended usage is a bit different. Blacklisting, in other tools, is the
only method to prevent the upgrade manager from automatically upgrading a given
package. In slackroll, however, this is achieved using package states.
Specifically, the frozen state has that purpose.

Blacklisting in slackroll does something useful, but slightly different. It can
be used, of course, for that same purpose if you want but it's not recommended.
In slackroll, the blacklist is used to filter remote packages, and the regular
expressions will be used in the whole package name, including the package path.
If any of the blacklisted regular expressions matches the name and/or path of a
given remote package, slackroll will completely ignore the existence of that
package in the remote tree.

While you can use this to prevent slackroll from upgrading specific packages,
if you use it with that purpose, you will notice that you will be forced to
mark those packages as foreign in your system, which does not sound quite well,
as they are not foreign per-se. However, you are telling slackroll to ignore
that they exist in the remote tree, so they cannot be anything other than
unavailable or foreign.

The blacklisting mechanism was introduced with the specific purpose of either
ignoring parts of the tree (for example, if you don't want to ever hear about
packages in /testing), or to ignore the existence of a specific version of a
package, so that slackroll will not ask you again and again which package
version you want to install when there's an upgrade. For example, if you don't
use the "nosmp" kernels, you can blacklist "/extra/linux-[^-/]+-nosmp-sdk/" to
ignore those packages.

As mentioned above, the regular expressions will be used on the whole package
name. You can additionally have a regular expression apply only to certain
URLs by adding '@' followed by a regular expression which will be used on the
whole URL.

As you can imagine from the previous points, usually the blacklist is short and
very specific.

Also see: blacklist-del, print-blacklist.
