
list-outdated-frozen

This operation expects no arguments. When packages are in the frozen state, no
attempt will be performed by slackroll to upgrade them. Even if their versions
do not match any available version in any remote tree, they will not be put in
the "outdated" state, as with the "installed" packages. This operation lets you
see which packages would be "outdated" if they were not "frozen".

It could be used in several situations, but the tutorial explicitly mentions
the case that prompted the creation of the operation. Sometimes, people rebuild
official packages with the intention of fine-tuning them or applying patches
which are normally not applied to the official packages. There are several ways
of handling these custom builds, and one of them is to give your custom package
archive the same name as the official package, except maybe for the build
number, which could contain a personal suffix. You would, then, put the package
in the frozen state if you do not wish slackroll to automatically upgrade the
package.

However, if you do not notice, reading the change log, that the package has
been upgraded, you may not realize you need to rebuild the package to bring
your custom build up to date with the official version, so list-outdated-frozen
may help you detect which of these package would need to be rebuilt.

Tip: if your custom builds have exactly the same name as official packages
(personally, I recommend using a custom build number in the package name), you
could do the following if you detect it should be rebuilt: (1) create the
rebuilt package (2) copy the resulting file to the package cache, in
/var/slackroll/packages (3) unfreeze the package if it was frozen (4) run the
"upgrade" operation (5) put the package again in the frozen state if you wish.

Also see: list-frozen, list-transient, list-outdated.
